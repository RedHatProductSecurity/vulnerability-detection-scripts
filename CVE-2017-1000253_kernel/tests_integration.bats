#!/usr/bin/env bats

export SCRIPT="./CVE-2017-1000253.sh"

# this doesn't test everything, just 
# * the sysctl mitigation detection because that is new and untested
# * some of the possible output cases to test the reducer-like logic at the end

export RHEL6_VULNERABLE="2.6.32-504.63.2.el6.x86_64"
export RHEL6_SAFE="99.99.999-696.1.1.el6.x86_64"
export RHEL7_VULNERABLE="3.10.0-514.21.1.el7.x86_64"
export RHEL7_SAFE="3.10.0-693.2.2.el7.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"

@test "Integration -- vm.legacy_va_layout=1 only live mitigation, vulnerable RHEL 6" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL6_VULNERABLE"
    }
    export -f sysctl
    export -f uname

    run "$SCRIPT"
    (( status == 3 ))
    [[ "$output" == *"The mitigation is not saved and will be lost after reboot"* ]]
}

@test "Integration -- vm.legacy_va_layout=0 no mitigation, vulnerable RHEL 6" {
    sysctl() {
        echo "vm.legacy_va_layout = 0"
    }
    uname() {
        echo "$RHEL6_VULNERABLE"
    }
    export -f sysctl
    export -f uname

    run "$SCRIPT"
    (( status == 2 ))
    [[ "$output" == *"Either update the kernel package and"* ]]
}

@test "Integration -- vm.legacy_va_layout=0 no mitigation, vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 0"
    }
    uname() {
        echo "$RHEL7_VULNERABLE"
    }
    export -f sysctl
    export -f uname

    run "$SCRIPT"
    (( status == 2 ))
    [[ "$output" == *"Either update the kernel package and"* ]]
}

@test "Integration -- vm.legacy_va_layout=1 full mitigation, vulnerable RHEL 6" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL6_VULNERABLE"
    }
    grep() {
        if [[ $# == 2 ]]; then
            if [[ $2 == '/etc/sysctl.conf' ]]; then
                /bin/grep "$1" <( echo "vm.legacy_va_layout = 1" ; )
            else
                /bin/grep "$@"
            fi
        else
            /bin/grep "$@"
        fi
    }
    export -f sysctl
    export -f uname
    export -f grep

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"You have correct mitigation installed"* ]]
}

@test "Integration -- vm.legacy_va_layout=1 full mitigation, not vulnerable RHEL 6" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL6_SAFE"
    }
    grep() {
        if [[ $# == 2 ]]; then
            if [[ $2 == '/etc/sysctl.conf' ]]; then
                /bin/grep "$1" <( echo "vm.legacy_va_layout = 1" ; )
            else
                /bin/grep "$@"
            fi
        else
            /bin/grep "$@"
        fi
    }
    export -f sysctl
    export -f uname
    export -f grep

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"This kernel version is not vulnerable"* ]]
}

@test "Integration -- vm.legacy_va_layout=1 full mitigation, not vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL7_SAFE"
    }
    grep() {
        if [[ $# == 2 ]]; then
            if [[ $2 == '/etc/sysctl.conf' ]]; then
                /bin/grep "$1" <( echo "vm.legacy_va_layout = 1" ; )
            else
                /bin/grep "$@"
            fi
        else
            /bin/grep "$@"
        fi
    }
    export -f sysctl
    export -f uname
    export -f grep

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"This kernel version is not vulnerable"* ]]
}

@test "Integration -- vm.legacy_va_layout=0 no mitigation, invalid kpatch, vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 0"
    }
    uname() {
        echo "$RHEL7_VULNERABLE"
    }
    lsmod() {
        echo "kpatch_3_10_0_514_21_1_1_2"
    }
    export -f sysctl
    export -f uname
    export -f lsmod

    run "$SCRIPT"
    (( status == 2 ))
    [[ "$output" == *"Either update the kernel package and"* ]]
}

@test "Integration -- vm.legacy_va_layout=0 no mitigation, kpatch, vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 0"
    }
    uname() {
        echo "$RHEL7_VULNERABLE"
    }
    lsmod() {
        echo "kpatch_3_10_0_514_32_2_1_1"
    }
    export -f sysctl
    export -f uname
    export -f lsmod

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"This kernel version is vulnerable."* ]]
    [[ "$output" == *"You have correct kpatch installed"* ]]
}

@test "Integration -- vm.legacy_va_layout=1 full mitigation, kpatch, vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL7_VULNERABLE"
    }
    grep() {
        if [[ $# == 2 ]]; then
            if [[ $2 == '/etc/sysctl.conf' ]]; then
                /bin/grep "$1" <( echo "vm.legacy_va_layout = 1" ; )
            else
                /bin/grep "$@"
            fi
        else
            /bin/grep "$@"
        fi
    }
    lsmod() {
        echo "kpatch_3_10_0_514_32_2_1_1"
    }
    export -f sysctl
    export -f uname
    export -f grep
    export -f lsmod

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"This kernel version is vulnerable."* ]]
    [[ "$output" == *"You have correct kpatch installed"* ]]
}

@test "Integration -- vm.legacy_va_layout=1 full mitigation, kpatch, not vulnerable RHEL 7" {
    sysctl() {
        echo "vm.legacy_va_layout = 1"
    }
    uname() {
        echo "$RHEL7_SAFE"
    }
    grep() {
        if [[ $# == 2 ]]; then
            if [[ $2 == '/etc/sysctl.conf' ]]; then
                /bin/grep "$1" <( echo "vm.legacy_va_layout = 1" ; )
            else
                /bin/grep "$@"
            fi
        else
            /bin/grep "$@"
        fi
    }
    lsmod() {
        echo "kpatch_3_10_0_514_32_2_1_1"
    }
    export -f sysctl
    export -f uname
    export -f grep
    export -f lsmod

    run "$SCRIPT"
    (( status == 0 ))
    [[ "$output" == *"This kernel version is not vulnerable"* ]]
}

