#!/usr/bin/env bats

export RHEL7="3.10.0-520.10.2.el7.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )


@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    lsmod() {
        :
    }
    rpm() {
        :
    }
    pgrep() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- RHEL7, fixed kernel" {
    uname() {
        echo "$RHEL7"
    }
    lsmod() {
        echo "vhost_net"
    }
    rpm() {
        echo "libvirt-4.5.0-23.el7_7.1.x86_64"
    }
    pgrep() {
        echo "1234"  # libvirtd PID
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blacklisted_1

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is not affected" ]]
}


@test "Integration -- RHEL7, vulnerable kernel, and vhost_net" {
    uname() {
        echo "3.10.0-327.28.2.el7"
    }
    lsmod() {
        echo "vhost_net"
    }
    rpm() {
        :
    }
    pgrep() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blacklisted_1

    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "This system seems to be a virtualization host." ]]
}


@test "Integration -- RHEL7, vulnerable kernel, and libvirt" {
    uname() {
        echo "3.10.0-327.28.2.el7"
    }
    lsmod() {
        :
    }
    rpm() {
        :
    }
    pgrep() {
        echo "1234"  # libvirtd PID
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blacklisted_1

    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "This system seems to be a virtualization host." ]]
}


@test "Integration -- RHEL7, vulnerable kernel, libvirt, mitigation #1" {
    uname() {
        echo "3.10.0-327.28.2.el7"
    }
    lsmod() {
        :
    }
    rpm() {
        echo "libvirt-4.5.0-23.el7_7.1.x86_64"
    }
    pgrep() {
        echo "1234"  # libvirtd PID
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_blacklisted_1

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "The vhost_net kernel module is blacklisted" ]]
}


@test "Integration -- RHEL7, vulnerable kernel, libvirt, mitigation #2" {
    uname() {
        echo "3.10.0-327.28.2.el7"
    }
    lsmod() {
        :
    }
    rpm() {
        echo "libvirt-4.5.0-23.el7_7.1.x86_64"
    }
    pgrep() {
        echo "1234"  # libvirtd PID
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_blacklisted_2

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "The vhost_net kernel module is blacklisted" ]]
}


@test "Integration -- RHEL7, vulnerable kernel, libvirt, mitigation #2, but module still loaded" {
    uname() {
        echo "3.10.0-327.28.2.el7"
    }
    lsmod() {
        echo "vhost_net"
    }
    rpm() {
        echo "libvirt-4.5.0-23.el7_7.1.x86_64"
    }
    pgrep() {
        echo "1234"  # libvirtd PID
    }
    export -f uname
    export -f lsmod
    export -f rpm
    export -f pgrep

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_blacklisted_2

    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "This system seems to be a virtualization host." ]]
}
