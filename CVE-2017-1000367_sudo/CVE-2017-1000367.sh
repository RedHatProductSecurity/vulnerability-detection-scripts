#!/bin/bash

# Copyright (c) 2019  Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Version: 1.0

# Warning! Be sure to download latest version of this script from its primary source:
# https://access.redhat.com/security/vulnerabilities/3059071
# DO NOT blindly trust any internet sources and NEVER do `curl something | bash`!

# Checking against the list of vulnerable packages is necessary because of the way how features
# are back-ported to older versions of packages in various channels.

VULNERABLE_VERSIONS=(
    'sudo-1.6.8p12-12.el5'
    'sudo-1.6.9p17-3.el5'
    'sudo-1.6.9p17-3.el5_3.1'
    'sudo-1.6.9p17-5.el5'
    'sudo-1.6.9p17-6.el5_4'
    'sudo-1.7.2p1-5.el5'
    'sudo-1.7.2p1-6.el5_5'
    'sudo-1.7.2p1-7.el5_5'
    'sudo-1.7.2p1-8.el5_5'
    'sudo-1.7.2p1-9.el5_5'
    'sudo-1.7.2p1-10.el5'
    'sudo-1.7.2p1-13.el5'
    'sudo-1.7.2p1-14.el5_8'
    'sudo-1.7.2p1-14.el5_8.2'
    'sudo-1.7.2p1-14.el5_8.3'
    'sudo-1.7.2p1-14.el5_8.4'
    'sudo-1.7.2p1-22.el5'
    'sudo-1.7.2p1-22.el5_9.1'
    'sudo-1.7.2p1-28.el5'
    'sudo-1.7.2p1-29.el5_10'
    'sudo-1.7.4p5-5.el6'
    'sudo-1.7.4p5-6.el6_1'
    'sudo-1.7.4p5-7.el6'
    'sudo-1.7.4p5-9.el6_2'
    'sudo-1.7.4p5-11.el6'
    'sudo-1.7.4p5-12.el6_3'
    'sudo-1.7.4p5-13.el6_3'
    'sudo-1.7.4p5-13.el6_3.1'
    'sudo-1.8.6p3-7.el6'
    'sudo-1.8.6p3-12.el6'
    'sudo-1.8.6p3-15.el6'
    'sudo-1.8.6p3-19.el6'
    'sudo-1.8.6p3-20.el6_7'
    'sudo-1.8.6p3-24.el6'
    'sudo-1.8.6p3-25.el6_8'
    'sudo-1.8.6p3-27.el6'
    'sudo-1.8.6p7-11.el7'
    'sudo-1.8.6p7-13.el7'
    'sudo-1.8.6p7-16.el7'
    'sudo-1.8.6p7-17.el7_2'
    'sudo-1.8.6p7-20.el7'
    'sudo-1.8.6p7-21.el7_3'
)


basic_args() {
    # Parses basic commandline arguments and sets basic environment.
    #
    # Args:
    #     parameters - an array of commandline arguments
    #
    # Side effects:
    #     Exits if --help parameters is used
    #     Sets COLOR constants and debug variable

    parameters=( "$@" )

    RED="\033[1;31m"
    YELLOW="\033[1;33m"
    GREEN="\033[1;32m"
    BOLD="\033[1m"
    RESET="\033[0m"
    for parameter in "${parameters[@]}"; do
        if [[ "$parameter" == "-h" || "$parameter" == "--help" ]]; then
            echo "Usage: $( basename "$0" ) [-n | --no-colors] [-d | --debug]"
            exit 1
        elif [[ "$parameter" == "-n" || "$parameter" == "--no-colors" ]]; then
            RED=""
            # Unused color
            # shellcheck disable=SC2034
            YELLOW=""
            GREEN=""
            BOLD=""
            RESET=""
        elif [[ "$parameter" == "-d" || "$parameter" == "--debug" ]]; then
            debug=true
        fi
    done
}


basic_reqs() {
    # Prints common disclaimer and checks basic requirements.
    #
    # Args:
    #     CVE - string printed in the disclaimer
    #
    # Side effects:
    #     Exits when 'rpm' command is not available

    CVE="$1"

    # Disclaimer
    echo
    echo -e "${BOLD}This script is primarily designed to detect $CVE on supported"
    echo -e "Red Hat Enterprise Linux systems and kernel packages."
    echo -e "Result may be inaccurate for other RPM based systems.${RESET}"
    echo

    # RPM is required
    if ! command -v rpm &> /dev/null; then
        echo "'rpm' command is required, but not installed. Exiting."
        exit 1
    fi
}


check_supported_kernel() {
    # Checks if running kernel is supported.
    #
    # Args:
    #     running_kernel - kernel string as returned by 'uname -r'
    #
    # Side effects:
    #     Exits when running kernel is obviously not supported

    running_kernel="$1"

    # Check supported platform
    if [[ "$running_kernel" != *".el"[5-7]* ]]; then
        echo -e "${RED}This script is meant to be used only on Red Hat Enterprise"
        echo -e "Linux 5, 6 and 7.${RESET}"
        exit 1
    fi
}


check_package() {
    # Checks if installed package is in list of vulnerable packages.
    #
    # Args:
    #     installed_package - installed package string as returned by 'rpm -qa package'
    #     vulnerable_versions - an array of vulnerable versions
    #
    # Prints:
    #     Vulnerable package string as returned by 'rpm -qa package', or nothing

    installed_package="$1"
    shift
    vulnerable_versions=( "$@" )

    for tested_package in "${vulnerable_versions[@]}"; do
        if [[ "$installed_package" == "$tested_package"* ]]; then
            echo "$installed_package"
            break
        fi
    done
}


if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    basic_args "$@"
    basic_reqs "CVE-2017-1000367"
    running_kernel=$( uname -r )
    check_supported_kernel "$running_kernel"

    # Sudo version
    installed_package=$( rpm -qa "sudo" )
    if [[ ! "$installed_package" ]]; then
        echo -e "${GREEN}'sudo' is not installed${RESET}."
        exit 0
    fi

    # Basic checks
    vulnerable_package=$( check_package "$installed_package" "${VULNERABLE_VERSIONS[@]}" )

    # Debug prints
    if [[ "$debug" ]]; then
        echo "running_kernel = *$running_kernel*"
        echo "installed_package = *$installed_package*"
        echo "vulnerable_package = *$vulnerable_package*"
        echo
    fi

    # Results
    echo -e "Detected 'sudo' package is '${BOLD}$installed_package${RESET}'."

    if [[ "$vulnerable_package" ]]; then
        echo -e "${RED}This 'sudo' version is vulnerable.${RESET}"
        echo -e "Update 'sudo' package when possible, there are no mitigations available."
        echo -e "Follow https://access.redhat.com/security/vulnerabilities/3059071 for advice."
        exit 2
    else
        echo -e "${GREEN}This 'sudo' version is not vulnerable.${RESET}"
        exit 0
    fi
fi
