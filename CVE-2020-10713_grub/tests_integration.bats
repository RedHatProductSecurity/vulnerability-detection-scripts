#!/usr/bin/env bats

export RHEL7="3.10.0-520.10.2.el7.x86_64"
export RHEL8="4.18.0-80.el8.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )
export RHEL7_SECBOOT_DMESG="Secure boot enabled"

journalctl() {
    echo "nothing relevant"
}

rpm_rh7_allvuln() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo 'kernel-rt'
                echo 'kernel-rt'
                echo 'kernel-rt'
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64-12-1.el7.x86_64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi-2.02-0.44.el7.x86_64"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo 'kernel-rt-3.10.0-1127.8.2.rt56.1103.el7.x86_64'
                echo 'kernel-rt-3.10.0-1127.10.1.rt56.1106.el7.x86_64'
                echo "kernel-rt-3.10.0-1127.13.1.rt56.1110.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel-3.10.0-1127.8.2.el7.x86_64'
                echo 'kernel-3.10.0-1127.10.1.el7.x86_64'
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_allvuln_bios() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2" ]]; then
                echo "grub2"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2" ]]; then
                echo "grub2-2.02-0.44.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel-3.10.0-1127.8.2.el7.x86_64'
                echo 'kernel-3.10.0-1127.10.1.el7.x86_64'
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_allvuln_bios_only_grub2pc() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2-pc" ]]; then
                echo "grub2-pc"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2-pc" ]]; then
                echo "grub2-pc-2.02-0.64.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel-3.10.0-1127.8.2.el7.x86_64'
                echo 'kernel-3.10.0-1127.10.1.el7.x86_64'
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_kernvuln_fixedgrub_bios() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2" ]]; then
                echo "grub2"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "grub2" ]]; then
                echo "grub2-9992.02-0.44.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel-3.10.0-1127.8.2.el7.x86_64'
                echo 'kernel-3.10.0-1127.10.1.el7.x86_64'
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_allvuln_nogrub() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel-3.10.0-1127.8.2.el7.x86_64'
                echo 'kernel-3.10.0-1127.10.1.el7.x86_64'
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_allvuln_shimgrub_somevulnkernel() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo 'kernel-rt'
                echo 'kernel-rt'
                echo 'kernel-rt'
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64-12-1.el7.x86_64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi-2.02-0.44.el7.x86_64"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo "kernel-rt-3.10.0-1127.13.1.rt56.1110.el7.x86_64"
                echo "kernel-rt-3.10.0-1127.13.2.rt56.foo.el7.x86_64"
                echo "kernel-rt-3.10.0-1127.13.3.rt56.bar.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
                echo "kernel-3.10.0-1127.14.foo.el7.x86_64"
                echo "kernel-3.10.0-1127.15.bar.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_somevuln_shimkernel() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo 'kernel-rt'
                echo 'kernel-rt'
                echo 'kernel-rt'
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64-12-1.el7.x86_64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi-2.02-1.foobar.el7.x86_64"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo "kernel-rt-3.10.0-1127.13.1.rt56.1110.el7.x86_64"
                echo "kernel-rt-3.10.0-1127.13.2.rt56.foo.el7.x86_64"
                echo "kernel-rt-3.10.0-1127.13.3.rt56.bar.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo "kernel-3.10.0-1127.13.1.el7.x86_64"
                echo "kernel-3.10.0-1127.14.foo.el7.x86_64"
                echo "kernel-3.10.0-1127.15.bar.el7.x86_64"
            fi
            shift
        done
    fi
}

rpm_rh7_allfix() {
    if [[ "$2" == '--queryformat=%{NAME}\n' ]]; then
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo 'kernel-rt'
                echo 'kernel-rt'
            fi
            if [[ "$3" == "kernel" ]]; then
                echo 'kernel'
                echo 'kernel'
            fi
            shift
        done
    else
        while (( "$#" >= 3 )) ; do
            if [[ "$3" == "shim-x64" ]]; then
                echo "shim-x64-13-foobar.el7.x86_64"
            fi
            if [[ "$3" == "grub2-efi" ]]; then
                echo "grub2-efi-2.02-1.foobar.el7.x86_64"
            fi
            if [[ "$3" == "kernel-rt" ]]; then
                echo "kernel-rt-3.10.0-1127.13.2.rt56.foo.el7.x86_64"
                echo "kernel-rt-3.10.0-1127.13.3.rt56.bar.el7.x86_64"
            fi
            if [[ "$3" == "kernel" ]]; then
                echo "kernel-3.10.0-1127.14.foo.el7.x86_64"
                echo "kernel-3.10.0-1127.15.bar.el7.x86_64"
            fi
            shift
        done
    fi
}

@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    export -f uname

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- RHEL7, secboot, all vulnerable" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln "$@"
    }
    dmesg() {
        echo "$RHEL7_SECBOOT_DMESG"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allvuln
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 8 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Vulnerable versions of the affected packages are installed."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
kernel
kernel-rt
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *1*"* ]]
}


@test "Integration -- RHEL7, secboot, all vulnerable shim, grub, some vulnerable kernel" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln_shimgrub_somevulnkernel "$@"
    }
    dmesg() {
        echo "$RHEL7_SECBOOT_DMESG"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allvuln_shimgrub_somevulnkernel
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 4 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Only a partial update of the affected packages has been applied."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *1*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *1*"* ]]
}



@test "Integration -- RHEL7, secboot, some vulnerable shim, some vulnerable kernel" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_somevuln_shimkernel "$@"
    }
    dmesg() {
        echo "$RHEL7_SECBOOT_DMESG"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_somevuln_shimkernel
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 4 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Only a partial update of the affected packages has been applied."* ]]
    local pkglist="Update the following packages:

shim-x64
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *1*"* ]]
    [[ "$output" == *"fixed_kernel = *1*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *1*"* ]]
}


@test "Integration -- RHEL7, secboot, all fixed" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allfix "$@"
    }
    dmesg() {
        echo "$RHEL7_SECBOOT_DMESG"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allfix
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" != *"This system is vulnerable."* ]]
    [[ "$output" == *"This system is not vulnerable."* ]]
    [[ "$output" == *"Vulnerable package versions not installed"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *1*"* ]]
    [[ "$output" == *"fixed_grub = *1*"* ]]
    [[ "$output" == *"fixed_kernel = *1*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *1*"* ]]
}


@test "Integration -- RHEL7, secure boot disabled" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allvuln
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 9 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Vulnerable versions of the affected packages are installed."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
kernel
kernel-rt
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, secboot, all vulnerable, mokutil" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "SecureBoot enabled"
    }
    export -f uname
    export -f rpm_rh7_allvuln
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/empty


    run ./"${SCRIPT_NAME}" -n
    (( status == 8 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Vulnerable versions of the affected packages are installed."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
kernel
kernel-rt
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *1*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, secboot, all vulnerable, efivars" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allvuln
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/enabled


    run ./"${SCRIPT_NAME}" -n
    (( status == 8 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Vulnerable versions of the affected packages are installed."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
kernel
kernel-rt
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *1*"* ]]
}


@test "Integration -- RHEL7, secure boot disabled, efivars" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "blabla"
    }
    export -f uname
    export -f rpm_rh7_allvuln
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/disabled


    run ./"${SCRIPT_NAME}" -n
    (( status == 9 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" == *"Vulnerable versions of the affected packages are installed."* ]]
    local pkglist="Update the following packages:

grub2-efi
shim-x64
kernel
kernel-rt
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *0*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, BIOS" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln_bios "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "EFI variables are not supported on this system"
    }
    export -f uname
    export -f rpm_rh7_allvuln_bios
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/nonexistent


    run ./"${SCRIPT_NAME}" -n
    (( status == 17 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" != *"Vulnerable versions of the affected packages are installed."* ]]
    [[ "$output" == *"Vulnerable version of grub2 installed. This system doesn't use grub2 for UEFI. No other packages listed in the vulnerability article are applicable for this system."* ]]
    local pkglist="Update the following packages:

grub2
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *1*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, BIOS, grub2-pc instead of grub2" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln_bios_only_grub2pc "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "EFI variables are not supported on this system"
    }
    export -f uname
    export -f rpm_rh7_allvuln_bios_only_grub2pc
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/nonexistent


    run ./"${SCRIPT_NAME}" -n
    (( status == 17 ))
    [[ "$output" != *"This system is not vulnerable."* ]]
    [[ "$output" == *"This system is vulnerable."* ]]
    [[ "$output" != *"Vulnerable versions of the affected packages are installed."* ]]
    [[ "$output" == *"Vulnerable version of grub2 installed. This system doesn't use grub2 for UEFI. No other packages listed in the vulnerability article are applicable for this system."* ]]
    local pkglist="Update the following packages:

grub2-pc
"
    [[ "$output" == *"$pkglist"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *1*"* ]]
    [[ "$output" == *"fixed_grub = *0*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, BIOS, fixed grub" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_kernvuln_fixedgrub_bios "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "EFI variables are not supported on this system"
    }
    export -f uname
    export -f rpm_rh7_kernvuln_fixedgrub_bios
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/nonexistent


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" == *"This system is not vulnerable."* ]]
    [[ "$output" != *"This system is vulnerable."* ]]
    [[ "$output" != *"Vulnerable versions of the affected packages are installed."* ]]
    [[ "$output" == *"Vulnerable package grub2 not installed. This system doesn't use grub2 for UEFI. No other packages listed in the vulnerability article are applicable for this system."* ]]
    [[ "$output" != *"Update the following packages:"* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *1*"* ]]
    [[ "$output" == *"fixed_grub = *1*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}


@test "Integration -- RHEL7, no efi, no grub" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        rpm_rh7_allvuln_nogrub "$@"
    }
    dmesg() {
        echo "foobaz!"
    }
    mokutil() {
        echo "EFI variables are not supported on this system"
    }
    export -f uname
    export -f rpm_rh7_allvuln_nogrub
    export -f rpm
    export -f dmesg
    export -f journalctl
    export -f mokutil
    export MOCK_DMESG_PATH=/dev/null
    export MOCK_EFI_PATH=file_mocks/efivars/nonexistent


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" == *"This system is not vulnerable."* ]]
    [[ "$output" != *"This system is vulnerable."* ]]
    [[ "$output" != *"Vulnerable versions of the affected packages are installed."* ]]
    [[ "$output" == *"This system is not affected because grub2 is not installed."* ]]
    run ./"${SCRIPT_NAME}" -n -d
    [[ "$output" == *"fixed_shim = *1*"* ]]
    [[ "$output" == *"fixed_grub = *1*"* ]]
    [[ "$output" == *"fixed_kernel = *0*"* ]]
    [[ "$output" == *"secure_boot_active_dmesg = *0*"* ]]
    [[ "$output" == *"secure_boot_active_mokutil = *0*"* ]]
    [[ "$output" == *"secure_boot_active_firmware = *0*"* ]]
}
