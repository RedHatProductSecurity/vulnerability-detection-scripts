#!/usr/bin/env bats

export RHEL7="3.10.0-327.49.2.el7.x86_64"
export RHEL7_FUTURE="3.10.0-999.99.9.el7.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"
export SYSCTL_UNMITIGATED="1"
export SYSCTL_MITIGATED="0"
export FIREWALL_UNMITIGATED=1
export FIREWALL_MITIGATED=0
export LSMOD_NOPATCH="dm_crypt               27346  1 \
drbg                   30186  1 \
ansi_cprng             12989  0"
export LSMOD_KPATCH="dm_crypt               27346  1 \
drbg                   30186  1 \
ansi_cprng             12989  0 \
kpatch_3_10_0_957_21_2-1-1 99999 1"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )

@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_UNMITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- RHEL7, Not updated" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_UNMITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"


    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
}

@test "Integration -- RHEL7, Not updated, sysctl mitigation" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_MITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [ "${lines[4]}" = "This system is Mitigated" ]
    [ "${lines[5]}" = "* Running kernel is vulnerable" ]
    [ "${lines[6]}" = "* sysctl mitigation is applied" ]
}

@test "Integration -- RHEL7, Not updated, iptables mitigation" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_UNMITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_MITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_MITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [ "${lines[4]}" = "This system is Mitigated" ]
    [ "${lines[5]}" = "* Running kernel is vulnerable" ]
    [ "${lines[6]}" = "* iptables mitigation is applied" ]
}

@test "Integration -- RHEL7, Not updated, sysctl & iptables mitigations" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_MITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_MITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_MITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"


    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [ "${lines[4]}" = "This system is Mitigated" ]
    [ "${lines[5]}" = "* Running kernel is vulnerable" ]
    [ "${lines[6]}" = "* sysctl mitigation is applied" ]
    [ "${lines[7]}" = "* iptables mitigation is applied" ]
}

@test "Integration -- RHEL7, kpatch mitigation" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_UNMITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_KPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"

    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [ "${lines[4]}" = "This system is Mitigated" ]
    [ "${lines[5]}" = "* Running kernel is vulnerable" ]
    [ "${lines[6]}" = "* kpatch fix is applied" ]
}


@test "Integration -- RHEL7, no kpatch" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_UNMITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"
    export MOCK_KPATCH="${KPATCH_MODULE}"

    run ./"${SCRIPT_NAME}" -n
    (( status == 2 ))
    [ "${lines[4]}" = "This system is Vulnerable" ]
    [ "${lines[5]}" = "* Running kernel is vulnerable" ]
}

@test "Integration -- RHEL7, Updated" {
    uname() {
        echo "$RHEL7_FUTURE"
    }
    export -f uname

    sysctl() {
        echo "$SYSCTL_MITIGATED"
    }
    export -f sysctl

    iptables() {
        return "$FIREWALL_MITIGATED"
    }
    export -f iptables

    ip6tables() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f ip6tables

    firewall-cmd() {
        return "$FIREWALL_UNMITIGATED"
    }
    export -f firewall-cmd

    lsmod() {
        echo "$LSMOD_NOPATCH"
    }
    export -f lsmod

    export MOCK_EUID="0"

    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [ "${lines[4]}" = "This system is Not affected" ]
}
