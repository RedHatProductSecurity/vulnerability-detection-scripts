#!/usr/bin/env bats

export RHEL6="2.6.32-700.el6.x86_64"
export RHEL7="3.10.0-520.10.2.el7.x86_64"
export RHEL8="4.18.0-80.el8.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )

# TODO these are very simple tests, a lot of customization is needed. See older tests.

result_system_service_and_process() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    (( _expected_status+=4 ))   # dnsmasq_service_running
    (( _expected_status+=8 ))   # dnsmasq_enabled
    #(( _expected_status+=16 ))  # libvirtd_running
    #(( _expected_status+=32 ))  # libvirtd_enabled
    echo "${_expected_status}"
}

result_bespoke_process() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    #(( _expected_status+=4 ))   # dnsmasq_service_running
    #(( _expected_status+=8 ))   # dnsmasq_enabled
    #(( _expected_status+=16 ))  # libvirtd_running
    #(( _expected_status+=32 ))  # libvirtd_enabled
    echo "${_expected_status}"
}

result_libvirt_running() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    #(( _expected_status+=4 ))   # dnsmasq_service_running
    #(( _expected_status+=8 ))   # dnsmasq_enabled
    (( _expected_status+=16 ))  # libvirtd_running
    #(( _expected_status+=32 ))  # libvirtd_enabled
    echo "${_expected_status}"
}

result_libvirt_running_and_enabled() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    #(( _expected_status+=4 ))   # dnsmasq_service_running
    #(( _expected_status+=8 ))   # dnsmasq_enabled
    (( _expected_status+=16 ))  # libvirtd_running
    (( _expected_status+=32 ))  # libvirtd_enabled
    echo "${_expected_status}"
}

result_libvirt_nm() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    #(( _expected_status+=4 ))   # dnsmasq_service_running
    #(( _expected_status+=8 ))   # dnsmasq_enabled
    #(( _expected_status+=16 ))  # libvirtd_running
    #(( _expected_status+=32 ))  # libvirtd_enabled
    (( _expected_status+=64 ))  # nm_running
    echo "${_expected_status}"
}

result_libvirt_nm_and_libvirt() {
    local _expected_status=0
    (( _expected_status+=1 ))   # vulnerable_package
    (( _expected_status+=2 ))   # dnsmasq_running
    #(( _expected_status+=4 ))   # dnsmasq_service_running
    #(( _expected_status+=8 ))   # dnsmasq_enabled
    (( _expected_status+=16 ))  # libvirtd_running
    (( _expected_status+=32 ))  # libvirtd_enabled
    (( _expected_status+=64 ))  # nm_running
    echo "${_expected_status}"
}

@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    export -f uname

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- RHEL7 - only systemd service" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq -k"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 0
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 1
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_system_service_and_process )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" == *"* The dnsmasq service is currently running."* ]]
    [[ "$output" == *"* The dnsmasq service is enabled."* ]]

    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" != *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL6 - only system service" {
    uname() {
        echo "$RHEL6"
    }
    rpm() {
        echo "dnsmasq-2.48-18.el6_9.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq -s 6.some.hostname"
        echo "/usr/bin/something"
    }
    chkconfig() {
        if [[ "$2" == "dnsmasq" ]] ; then
            echo "dnsmasq           0:off   1:off   2:off   3:off   4:off   5:on    6:off"
        fi
        if [[ "$2" == "libvirtd" ]] ; then
            echo "libvirtd          0:off   1:off   2:off   3:off   4:off   5:off   6:off"
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f chkconfig

    local expected_status="$( result_system_service_and_process )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.48-18.el6_9.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" == *"* The dnsmasq service is currently running."* ]]
    [[ "$output" == *"* The dnsmasq service is enabled."* ]]

    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" != *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL8 - only systemd service" {
    uname() {
        echo "$RHEL8"
    }
    rpm() {
        echo "dnsmasq-2.79-13.el8.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq -k"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 0
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 1
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_system_service_and_process )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.79-13.el8.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" == *"* The dnsmasq service is currently running."* ]]
    [[ "$output" == *"* The dnsmasq service is enabled."* ]]

    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" != *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL7 - not a systemd service but bespoke dnsmasq usage" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq  --no-hosts --no-resolv --bind-interfaces --pid-file=/var/something/dnsmasq.pid --listen-address=127.0.0.1 --conf-file=/etc/something --proxy-dnssec --enable-dbus=org.baz.bar.foo --conf-dir=/etc/something "
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 1
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 1
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_bespoke_process )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" != *"* The dnsmasq service is currently running."* ]]
    [[ "$output" != *"* The dnsmasq service is enabled."* ]]
    [[ "$output" == *"* A dnsmasq process is currently running."* ]]
    [[ "$output" != *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL7 - libvirtd using dnsmasq; libvirtd service disabled" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq --conf-file=/var/lib/libvirt/dnsmasq/default.conf --leasefile-ro --dhcp-script=/usr/libexec/libvirt_leaseshelper"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 1
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 1
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_libvirt_running )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" != *"* The dnsmasq service is currently running."* ]]
    [[ "$output" != *"* The dnsmasq service is enabled."* ]]
    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" == *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL7 - libvirtd using dnsmasq; libvirtd service enabled" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq --conf-file=/var/lib/libvirt/dnsmasq/default.conf --leasefile-ro --dhcp-script=/usr/libexec/libvirt_leaseshelper"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 1
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 0
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_libvirt_running_and_enabled )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" != *"* The dnsmasq service is currently running."* ]]
    [[ "$output" != *"* The dnsmasq service is enabled."* ]]
    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" == *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" != *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" == *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL7 - networkmanager using dnsmasq" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq --no-resolv --keep-in-foreground --no-hosts --bind-interfaces --pid-file=/var/run/NetworkManager/dnsmasq.pid --listen-address=127.0.0.1 --cache-size=400 --clear-on-reload --conf-file=/dev/null --proxy-dnssec --enable-dbus=org.freedesktop.NetworkManager.dnsmasq --conf-dir=/etc/NetworkManager/dnsmasq.d"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 1
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 1
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_libvirt_nm )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" != *"* The dnsmasq service is currently running."* ]]
    [[ "$output" != *"* The dnsmasq service is enabled."* ]]
    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" != *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" == *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" != *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}


@test "Integration -- RHEL7 - networkmanager using dnsmasq, and libvirt using dnsmasq" {
    uname() {
        echo "$RHEL7"
    }
    rpm() {
        echo "dnsmasq-2.76-16.el7.x86_64"
    }
    ps() {
        echo "/usr/bin/something"
        echo "/usr/sbin/dnsmasq --no-resolv --keep-in-foreground --no-hosts --bind-interfaces --pid-file=/var/run/NetworkManager/dnsmasq.pid --listen-address=127.0.0.1 --cache-size=400 --clear-on-reload --conf-file=/dev/null --proxy-dnssec --enable-dbus=org.freedesktop.NetworkManager.dnsmasq --conf-dir=/etc/NetworkManager/dnsmasq.d"
        echo "/usr/sbin/dnsmasq --conf-file=/var/lib/libvirt/dnsmasq/default.conf --leasefile-ro --dhcp-script=/usr/libexec/libvirt_leaseshelper"
        echo "/usr/bin/something"
    }
    systemctl() {
        if [[ "$3" == "dnsmasq" ]] ; then
            return 1
        fi
        if [[ "$3" == "libvirtd" ]] ; then
            return 0
        fi
    }
    export -f uname
    export -f rpm
    export -f ps
    export -f systemctl

    local expected_status="$( result_libvirt_nm_and_libvirt )"
    run ./"${SCRIPT_NAME}" -n
    
    (( status == expected_status ))
    [[ "$output" == *"Detected 'dnsmasq' package: dnsmasq-2.76-16.el7.x86_64"* ]]
    [[ "$output" == *"This version of dnsmasq is vulnerable."* ]]
    [[ "$output" == *"Additional information:"* ]]
    [[ "$output" != *"* The dnsmasq service is currently running."* ]]
    [[ "$output" != *"* The dnsmasq service is enabled."* ]]
    [[ "$output" != *"* A dnsmasq process is currently running."* ]]
    [[ "$output" == *"* Libvirt is using dnsmasq."* ]]
    [[ "$output" == *"* NetworkManager is using dnsmasq."* ]]
    [[ "$output" == *"* The libvirtd service is enabled."* ]]
    [[ "$output" != *"Dnsmasq is not installed."* ]]
}
