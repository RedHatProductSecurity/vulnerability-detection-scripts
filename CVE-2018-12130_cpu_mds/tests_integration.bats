#!/usr/bin/env bats

export FEDORA="4.9.14-200.fc25.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )


@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    export -f uname

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- RHEL7, kernel not updated" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/foo
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
}


@test "Integration -- RHEL7, vulnerable, kernel updated but no microcode" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/vuln-vuln-nomicrocode/mds
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 3 ))
}


@test "Integration -- RHEL7, POWER not affected" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-power
    export MOCK_VULN_FILE_PATH=integration/file_mocks/foo
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}


@test "Integration -- RHEL7, Intel, full mitigation" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/vuln-mit/mds
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}


@test "Integration -- RHEL7, Intel, full mitigation" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/vuln-smt/mds
    export MOCK_DMESG_PATH=file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}


@test "Integration -- RHEL7, vulnerable, kernel updated but disabled" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-normal
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/vuln-vuln-disabled/mds
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-normal

    run ./"${SCRIPT_NAME}"
    (( status == 3 ))
}


@test "Integration -- RHEL7, EC2" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-ec2
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/vuln-vuln-vm/mds
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-ec2

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" =~ "Amazon" ]]
}


@test "Integration -- RHEL7, EC2 but kernel without mitigation" {
    uname() {
        cat integration/file_mocks/uname_r-rhel7
    }
    export -f uname
    dmesg() {
        cat file_mocks/dmesg-ec2
    }
    export -f dmesg
    export MOCK_EUID=0
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo-skylake
    export MOCK_VULN_FILE_PATH=integration/file_mocks/foo
    export MOCK_DMESG_PATH=integration/file_mocks/dmesg-ec2

    run ./"${SCRIPT_NAME}"
    (( status == 2 ))
    [[ ! "$output" =~ "Amazon" ]]
}
