#!/usr/bin/env bats

export RHEL7_OLD="3.10.0-520.10.2.el7.x86_64"  # same effect as new fixed version
export RHEL7_VULN="3.10.0-693.2.1.el7.x86_64"
export RHEL7_VULN_52="3.10.0-121.el7.x86_64"
export RHEL8_VULN_61="4.18.0-240.el8.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )

@test "Integration -- RHEL7, old non-vulnerable kernel" {
    uname() {
        echo "$RHEL7_OLD"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
btusb                      16384  2
bnep                       16384  2
bluetooth                  16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is not affected" ]]
    [[ "$output" != *"The bluetooth kernel modules are blocklisted"* ]]
    [[ "$output" != *"CVE-2020-12351: Not vulnerable"* ]]
    [[ "$output" != *"CVE-2020-12352: Not vulnerable"* ]]
    [[ "$output" != *"CVE-2020-24490: Not vulnerable"* ]]
    [[ "$output" != *"CVE-2020-25661: Not vulnerable"* ]]
    [[ "$output" != *"CVE-2020-25662: Not vulnerable"* ]]
    [[ "$output" != *"CVE-2020-12351: Vulnerable"* ]]
    [[ "$output" != *"CVE-2020-12352: Vulnerable"* ]]
    [[ "$output" != *"CVE-2020-24490: Vulnerable"* ]]
    [[ "$output" != *"CVE-2020-25661: Vulnerable"* ]]
    [[ "$output" != *"CVE-2020-25662: Vulnerable"* ]]
}

@test "Integration -- RHEL7, vulnerable kernel" {
    uname() {
        echo "$RHEL7_VULN"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
btusb                      16384  2
bnep                       16384  2
bluetooth                  16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blocklisted_1

    run ./"${SCRIPT_NAME}" -n
    (( status == 6 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" != *"The bluetooth kernel modules are blocklisted"* ]]
    [[ "$output" == *"CVE-2020-12351: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-12352: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-24490: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25661: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25662: Not vulnerable"* ]]
}

@test "Integration -- RHEL7, vulnerable kernel, mitigation" {
    uname() {
        echo "$RHEL7_VULN"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_multiple_blocklisted

    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "You have the proper mitigation installed" ]]
    [[ "$output" == *"CVE-2020-12351: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-12352: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-24490: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25661: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25662: Not vulnerable"* ]]
}

@test "Integration -- RHEL7, vulnerable kernel, partial mitigation" {
    uname() {
        echo "$RHEL7_VULN"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blocklisted_1

    run ./"${SCRIPT_NAME}" -n
    (( status == 0 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" =~ "However, loading of vulnerable kernel modules is not disabled" ]]
    [[ "$output" == *"CVE-2020-12351: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-12352: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-24490: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25661: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25662: Not vulnerable"* ]]
}


@test "Integration -- RHEL7, vulnerable kernel, only 52" {
    uname() {
        echo "$RHEL7_VULN_52"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
btusb                      16384  2
bnep                       16384  2
bluetooth                  16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blocklisted_1

    run ./"${SCRIPT_NAME}" -n
    (( status == 4 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" != *"The bluetooth kernel modules are blocklisted"* ]]
    [[ "$output" == *"CVE-2020-12351: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-12352: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-24490: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25661: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25662: Not vulnerable"* ]]
}


@test "Integration -- RHEL8, vulnerable kernel, 61&62&90" {
    uname() {
        echo "$RHEL8_VULN_61"
    }
    lsmod() {
        cat << EOF
Module                     Size  Used by
ip6t_rpfilter              16384  1
ip6t_REJECT                16384  2
btusb                      16384  2
bnep                       16384  2
bluetooth                  16384  2
EOF
    }
    rpm() {
        :
    }
    export -f uname
    export -f lsmod
    export -f rpm

    export MOCK_MODPROBE_PATH=file_mocks/modprobe_not_blocklisted_1

    run ./"${SCRIPT_NAME}" -n
    (( status == 8 ))
    [[ "$output" =~ "This kernel version is vulnerable." ]]
    [[ "$output" != *"The bluetooth kernel modules are blocklisted"* ]]
    [[ "$output" == *"CVE-2020-12351: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-12352: Not vulnerable"* ]]
    [[ "$output" == *"CVE-2020-24490: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25661: Vulnerable"* ]]
    [[ "$output" == *"CVE-2020-25662: Vulnerable"* ]]
}
