#!/usr/bin/env bats

export RHEL5="2.6.18-398.el5.x86_64"
export RHEL7="3.10.0-520.10.2.el7.x86_64"
export FEDORA="4.9.14-200.fc25.x86_64"
export SCRIPT_NAME=$( grep -E '^\. .*\.sh$' test_harness | sed -r 's/^\. (.*)$/\1/g' )


@test "Integration -- Fedora" {
    uname() {
        echo "$FEDORA"
    }
    export -f uname

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- Intel, RHEL7, new_kernel, hw_support, no_debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "Linux version"
        echo "FEATURE SPEC_CTRL Present"
        echo "FEATURE IBPB_SUPPORT Present"
        echo "x86/pti: Unmapping kernel while in userspace"
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}


@test "Integration -- Intel, RHEL7, new_kernel, hw_support, debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "Linux version"
        echo "FEATURE SPEC_CTRL Present"
        echo "FEATURE IBPB_SUPPORT Present"
        echo "x86/pti: Unmapping kernel while in userspace"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti1_ibrs1_ibpb1
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}

@test "Integration -- Intel, CentOS7, new_kernel, hw_support, no_debug, cmd_nopti_noibrs_noibpb, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        cat integration/file_mocks/dmesg/centos7_fixed_kernel_hw_support/dmesg_nopti_noibrs_noibpb.txt
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_nopti_noibrs_noibpb
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 12 ))
}

@test "Integration -- Intel, CentOS7, new_kernel, hw_support, no_debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        cat integration/file_mocks/dmesg/centos7_fixed_kernel_hw_support/dmesg.txt
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}

@test "Integration -- Intel, CentOS7, old_kernel, hw_support, no_debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        cat integration/file_mocks/dmesg/centos7_old_kernel_hw_support/dmesg.txt
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 14 ))
}

@test "Integration -- Intel, RHEL7, new_kernel, no_hw_support, no_debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "Linux version"
        echo "FEATURE SPEC_CTRL Not Present"
        echo "FEATURE IBPB_SUPPORT Not Present"
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 12 ))
}


@test "Integration -- Intel, RHEL7, new_kernel, no_hw_support, debug, cmd_ok, root" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "Linux version"
        echo "FEATURE SPEC_CTRL Not Present"
        echo "FEATURE IBPB_SUPPORT Not Present"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti0_ibrs0_ibpb0
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 12 ))
}


@test "Integration -- ARM, RHEL7" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/arm
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- Intel, RHEL5, old_kernel, no_hw_support, debug, cmd_ok, root" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foo
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 14 ))
}


@test "Integration -- Intel, RHEL5, new_kernel, no_hw_support, debug, cmd_ok, root" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti0
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 12 ))
}


@test "Integration -- Intel, RHEL5, new_kernel, no_hw_support, debug, cmd_ok, root, pti" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
        echo "x86/pti: Kernel page table isolation enabled"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti1
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}


@test "Integration -- Intel, RHEL5, new_kernel, no_hw_support, no_debug, cmd_ok, root, pti" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
        echo "x86/pti: Kernel page table isolation enabled"
    }
    mount() {
        echo ""
    }
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foo
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}


@test "Integration -- RHEL7, vulns files, Intel, md OK, v1 OK, v2 vuln " {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "Linux version"
        echo "FEATURE SPEC_CTRL Present"
        echo "FEATURE IBPB_SUPPORT Not Present"
        echo "x86/pti: Unmapping kernel while in userspace"
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/fences_noibpb_pti
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}

@test "Integration -- Intel, RHEL5, new_new_kernel, no_hw_support, debug, cmd_ok, root" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
    }
    mount() {
        echo "debugfs"
    }
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti0_ibrs0_ibpb0
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 12 ))
}


@test "Integration -- Intel, RHEL5, new_new_kernel, no_hw_support, debug, cmd_ok, root, pti" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
        echo "x86/pti: Kernel page table isolation enabled"
        echo "FEATURE SPEC_CTRL Not Present"
        echo "FEATURE IBPB_SUPPORT Not Present"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti1_ibrs0_ibpb0
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}


@test "Integration -- Intel, RHEL5, new_new_kernel, no_hw_support, no_debug, cmd_ok, root, pti" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
        echo "x86/pti: Kernel page table isolation enabled"
        echo "FEATURE SPEC_CTRL Not Present"
        echo "FEATURE IBPB_SUPPORT Not Present"
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foo
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}

@test "Integration -- RHEL7, POWER8, vulns files, all OK" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo ""
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/power8
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/power8/ok
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
}

@test "Integration -- RHEL7, POWER8, vulns files, RFI disabled" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo ""
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/power8
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_power_no_rfi_flush
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/power8/bad
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 8 ))
}

@test "Integration -- Other arch, RHEL7, vulns files, OK - not supported" {
    uname() {
        echo "$RHEL7"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/arm
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_power_no_rfi_flush
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/mystery_ok
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}

@test "Integration -- Other arch, RHEL7, vulns files, bad - not supported" {
    uname() {
        echo "$RHEL7"
    }
    export -f uname
    dmesg() {
        echo ""
    }
    export -f dmesg
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/arm
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foobar
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_power_no_rfi_flush
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/vuln_vuln_vuln
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0    

    run ./"${SCRIPT_NAME}"
    (( status == 1 ))
}


@test "Integration -- Intel, RHEL5, retpo_kernel, no_debug, cmd_ok, root, retp without IBPB" {
    uname() {
        echo "$RHEL5"
    }
    dmesg() {
        echo "Linux version"
        echo "x86/pti: Kernel page table isolation enabled"
    }
    mount() {
        echo ""
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/foo
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/fences_retpo_pti
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 4 ))
}

@test "Integration -- Intel, RHEL7, new_kernel, hw_support, debug, cmd_ok, root, wrapped" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "FEATURE SPEC_CTRL Present"
        echo "FEATURE IBPB_SUPPORT Present"
        echo "x86/pti: Unmapping kernel while in userspace"
    }
    mount() {
        echo "debugfs"
    }
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti1_ibrs1_ibpb1
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/nonexistent
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" == *"wrapped"* ]]
}

@test "Integration -- Intel, RHEL7, new_kernel, hw_support, debug, cmd_ok, root, wrapped fallback" {
    uname() {
        echo "$RHEL7"
    }
    dmesg() {
        echo "FEATURE SPEC_CTRL Present"
        echo "FEATURE IBPB_SUPPORT Present"
        echo "x86/pti: Unmapping kernel while in userspace"
    }
    mount() {
        echo "debugfs"
    }
    lsmod() {
        :
    }
    modinfo() {
        echo nope retpoline
    }
    export -f lsmod
    export -f modinfo
    export -f uname
    export -f dmesg
    export -f mount
    export MOCK_CPU_INFO_PATH=integration/file_mocks/cpuinfo/intel
    export MOCK_DEBUG_X86_PATH=integration/file_mocks/debug/pti1_ibrs1_ibpb1
    export MOCK_CMDLINE_PATH=integration/file_mocks/cmdline/cmdline_ok
    export MOCK_VULNS_PATH=integration/file_mocks/vulns/nonexistent
    export MOCK_LOG_DMESG_PATH=integration/file_mocks/dmesg/centos7_fixed_kernel_hw_support/dmesg.txt
    export MOCK_EUID=0

    run ./"${SCRIPT_NAME}"
    (( status == 0 ))
    [[ "$output" != *"wrapped"* ]]
}
