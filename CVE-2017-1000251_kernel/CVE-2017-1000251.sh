#!/bin/bash

# Copyright (c) 2019  Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Version: 1.1

# Warning! Be sure to download latest version of this script from its primary source:
# https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251
# DO NOT blindly trust any internet sources and NEVER do `curl something | bash`!

# Checking against the list of vulnerable packages is necessary because of the way how features
# are back-ported to older versions of packages in various channels.


VULNERABLE_KERNELS=(
    '3.10.0-229.1.2.ael7b'
    '3.10.0-229.4.2.ael7b'
    '3.10.0-229.7.2.ael7b'
    '3.10.0-229.11.1.ael7b'
    '3.10.0-229.14.1.ael7b'
    '3.10.0-229.20.1.ael7b'
    '3.10.0-229.24.2.ael7b'
    '3.10.0-229.26.2.ael7b'
    '3.10.0-229.28.1.ael7b'
    '3.10.0-229.30.1.ael7b'
    '3.10.0-229.34.1.ael7b'
    '3.10.0-229.38.1.ael7b'
    '3.10.0-229.40.1.ael7b'
    '3.10.0-229.42.1.ael7b'
    '3.10.0-229.42.2.ael7b'
    '3.10.0-229.44.1.ael7b'
    '3.10.0-229.46.1.ael7b'
    '3.10.0-229.48.1.ael7b'
    '3.10.0-229.49.1.ael7b'
    '2.6.32-71.7.1.el6'
    '2.6.32-71.14.1.el6'
    '2.6.32-71.18.1.el6'
    '2.6.32-71.18.2.el6'
    '2.6.32-71.24.1.el6'
    '2.6.32-71.29.1.el6'
    '2.6.32-71.31.1.el6'
    '2.6.32-71.34.1.el6'
    '2.6.32-71.35.1.el6'
    '2.6.32-71.36.1.el6'
    '2.6.32-71.37.1.el6'
    '2.6.32-71.38.1.el6'
    '2.6.32-71.39.1.el6'
    '2.6.32-71.40.1.el6'
    '2.6.32-131.0.15.el6'
    '2.6.32-131.2.1.el6'
    '2.6.32-131.4.1.el6'
    '2.6.32-131.6.1.el6'
    '2.6.32-131.12.1.el6'
    '2.6.32-131.17.1.el6'
    '2.6.32-131.21.1.el6'
    '2.6.32-131.22.1.el6'
    '2.6.32-131.25.1.el6'
    '2.6.32-131.26.1.el6'
    '2.6.32-131.28.1.el6'
    '2.6.32-131.29.1.el6'
    '2.6.32-131.30.1.el6'
    '2.6.32-131.30.2.el6'
    '2.6.32-131.33.1.el6'
    '2.6.32-131.35.1.el6'
    '2.6.32-131.36.1.el6'
    '2.6.32-131.37.1.el6'
    '2.6.32-131.38.1.el6'
    '2.6.32-131.39.1.el6'
    '2.6.32-220.el6'
    '2.6.32-220.2.1.el6'
    '2.6.32-220.4.1.el6'
    '2.6.32-220.4.2.el6'
    '2.6.32-220.4.7.bgq.el6'
    '2.6.32-220.7.1.el6'
    '2.6.32-220.7.3.p7ih.el6'
    '2.6.32-220.7.4.p7ih.el6'
    '2.6.32-220.7.6.p7ih.el6'
    '2.6.32-220.7.7.p7ih.el6'
    '2.6.32-220.13.1.el6'
    '2.6.32-220.17.1.el6'
    '2.6.32-220.23.1.el6'
    '2.6.32-220.24.1.el6'
    '2.6.32-220.25.1.el6'
    '2.6.32-220.26.1.el6'
    '2.6.32-220.28.1.el6'
    '2.6.32-220.30.1.el6'
    '2.6.32-220.31.1.el6'
    '2.6.32-220.32.1.el6'
    '2.6.32-220.34.1.el6'
    '2.6.32-220.34.2.el6'
    '2.6.32-220.38.1.el6'
    '2.6.32-220.39.1.el6'
    '2.6.32-220.41.1.el6'
    '2.6.32-220.42.1.el6'
    '2.6.32-220.45.1.el6'
    '2.6.32-220.46.1.el6'
    '2.6.32-220.48.1.el6'
    '2.6.32-220.51.1.el6'
    '2.6.32-220.52.1.el6'
    '2.6.32-220.53.1.el6'
    '2.6.32-220.54.1.el6'
    '2.6.32-220.55.1.el6'
    '2.6.32-220.56.1.el6'
    '2.6.32-220.57.1.el6'
    '2.6.32-220.58.1.el6'
    '2.6.32-220.60.2.el6'
    '2.6.32-220.62.1.el6'
    '2.6.32-220.63.2.el6'
    '2.6.32-220.64.1.el6'
    '2.6.32-220.65.1.el6'
    '2.6.32-220.66.1.el6'
    '2.6.32-220.67.1.el6'
    '2.6.32-220.68.1.el6'
    '2.6.32-220.69.1.el6'
    '2.6.32-220.70.1.el6'
    '2.6.32-220.71.1.el6'
    '2.6.32-220.72.2.el6'
    '2.6.32-220.73.1.el6'
    '2.6.32-279.el6'
    '2.6.32-279.1.1.el6'
    '2.6.32-279.2.1.el6'
    '2.6.32-279.5.1.el6'
    '2.6.32-279.5.2.el6'
    '2.6.32-279.9.1.el6'
    '2.6.32-279.11.1.el6'
    '2.6.32-279.14.1.bgq.el6'
    '2.6.32-279.14.1.el6'
    '2.6.32-279.19.1.el6'
    '2.6.32-279.22.1.el6'
    '2.6.32-279.23.1.el6'
    '2.6.32-279.25.1.el6'
    '2.6.32-279.25.2.el6'
    '2.6.32-279.31.1.el6'
    '2.6.32-279.33.1.el6'
    '2.6.32-279.34.1.el6'
    '2.6.32-279.37.2.el6'
    '2.6.32-279.39.1.el6'
    '2.6.32-279.41.1.el6'
    '2.6.32-279.42.1.el6'
    '2.6.32-279.43.1.el6'
    '2.6.32-279.43.2.el6'
    '2.6.32-279.46.1.el6'
    '2.6.32-358.el6'
    '2.6.32-358.0.1.el6'
    '2.6.32-358.2.1.el6'
    '2.6.32-358.6.1.el6'
    '2.6.32-358.6.2.el6'
    '2.6.32-358.6.3.p7ih.el6'
    '2.6.32-358.11.1.bgq.el6'
    '2.6.32-358.11.1.el6'
    '2.6.32-358.14.1.el6'
    '2.6.32-358.18.1.el6'
    '2.6.32-358.23.2.el6'
    '2.6.32-358.28.1.el6'
    '2.6.32-358.32.3.el6'
    '2.6.32-358.37.1.el6'
    '2.6.32-358.41.1.el6'
    '2.6.32-358.44.1.el6'
    '2.6.32-358.46.1.el6'
    '2.6.32-358.46.2.el6'
    '2.6.32-358.48.1.el6'
    '2.6.32-358.49.1.el6'
    '2.6.32-358.51.1.el6'
    '2.6.32-358.51.2.el6'
    '2.6.32-358.55.1.el6'
    '2.6.32-358.56.1.el6'
    '2.6.32-358.59.1.el6'
    '2.6.32-358.61.1.el6'
    '2.6.32-358.62.1.el6'
    '2.6.32-358.65.1.el6'
    '2.6.32-358.67.1.el6'
    '2.6.32-358.68.1.el6'
    '2.6.32-358.69.1.el6'
    '2.6.32-358.70.1.el6'
    '2.6.32-358.71.1.el6'
    '2.6.32-358.72.1.el6'
    '2.6.32-358.73.1.el6'
    '2.6.32-358.75.1.el6'
    '2.6.32-358.76.1.el6'
    '2.6.32-358.77.1.el6'
    '2.6.32-358.78.1.el6'
    '2.6.32-358.79.1.el6'
    '2.6.32-358.79.2.el6'
    '2.6.32-358.81.1.el6'
    '2.6.32-358.82.1.el6'
    '2.6.32-358.111.1.openstack.el6'
    '2.6.32-358.114.1.openstack.el6'
    '2.6.32-358.118.1.openstack.el6'
    '2.6.32-358.123.4.openstack.el6'
    '2.6.32-431.el6'
    '2.6.32-431.1.1.bgq.el6'
    '2.6.32-431.1.2.el6'
    '2.6.32-431.3.1.el6'
    '2.6.32-431.5.1.el6'
    '2.6.32-431.11.2.el6'
    '2.6.32-431.17.1.el6'
    '2.6.32-431.20.3.el6'
    '2.6.32-431.20.5.el6'
    '2.6.32-431.23.3.el6'
    '2.6.32-431.29.2.el6'
    '2.6.32-431.37.1.el6'
    '2.6.32-431.40.1.el6'
    '2.6.32-431.40.2.el6'
    '2.6.32-431.46.2.el6'
    '2.6.32-431.50.1.el6'
    '2.6.32-431.53.2.el6'
    '2.6.32-431.56.1.el6'
    '2.6.32-431.59.1.el6'
    '2.6.32-431.61.2.el6'
    '2.6.32-431.64.1.el6'
    '2.6.32-431.66.1.el6'
    '2.6.32-431.68.1.el6'
    '2.6.32-431.69.1.el6'
    '2.6.32-431.70.1.el6'
    '2.6.32-431.71.1.el6'
    '2.6.32-431.72.1.el6'
    '2.6.32-431.73.2.el6'
    '2.6.32-431.74.1.el6'
    '2.6.32-431.75.1.el6'
    '2.6.32-431.75.1.el6'
    '2.6.32-431.76.1.el6'
    '2.6.32-431.77.1.el6'
    '2.6.32-431.77.1.el6'
    '2.6.32-431.78.1.el6'
    '2.6.32-431.78.1.el6'
    '2.6.32-431.79.1.el6'
    '2.6.32-431.79.1.el6'
    '2.6.32-431.80.1.el6'
    '2.6.32-431.80.1.el6'
    '2.6.32-431.80.2.el6'
    '2.6.32-431.80.2.el6'
    '2.6.32-431.81.2.el6'
    '2.6.32-431.81.2.el6'
    '2.6.32-431.81.3.el6'
    '2.6.32-431.81.3.el6'
    '2.6.32-431.82.1.el6'
    '2.6.32-431.82.1.el6'
    '2.6.32-504.el6'
    '2.6.32-504.1.3.el6'
    '2.6.32-504.3.3.el6'
    '2.6.32-504.8.1.el6'
    '2.6.32-504.8.2.bgq.el6'
    '2.6.32-504.12.2.el6'
    '2.6.32-504.16.2.el6'
    '2.6.32-504.23.4.el6'
    '2.6.32-504.30.3.el6'
    '2.6.32-504.30.5.p7ih.el6'
    '2.6.32-504.30.6.p7ih.el6'
    '2.6.32-504.33.2.el6'
    '2.6.32-504.36.1.el6'
    '2.6.32-504.38.1.el6'
    '2.6.32-504.40.1.el6'
    '2.6.32-504.43.1.el6'
    '2.6.32-504.46.1.el6'
    '2.6.32-504.49.1.el6'
    '2.6.32-504.50.1.el6'
    '2.6.32-504.51.1.el6'
    '2.6.32-504.52.1.el6'
    '2.6.32-504.54.1.el6'
    '2.6.32-504.55.1.el6'
    '2.6.32-504.56.1.el6'
    '2.6.32-504.56.1.el6'
    '2.6.32-504.57.1.el6'
    '2.6.32-504.57.1.el6'
    '2.6.32-504.58.1.el6'
    '2.6.32-504.58.1.el6'
    '2.6.32-504.60.2.el6'
    '2.6.32-504.60.2.el6'
    '2.6.32-504.60.3.el6'
    '2.6.32-504.60.3.el6'
    '2.6.32-504.62.1.el6'
    '2.6.32-504.62.1.el6'
    '2.6.32-573.el6'
    '2.6.32-573.1.1.el6'
    '2.6.32-573.3.1.el6'
    '2.6.32-573.4.2.bgq.el6'
    '2.6.32-573.7.1.el6'
    '2.6.32-573.8.1.el6'
    '2.6.32-573.12.1.el6'
    '2.6.32-573.18.1.el6'
    '2.6.32-573.22.1.el6'
    '2.6.32-573.26.1.el6'
    '2.6.32-573.30.1.el6'
    '2.6.32-573.32.1.el6'
    '2.6.32-573.34.1.el6'
    '2.6.32-573.35.1.el6'
    '2.6.32-573.35.2.el6'
    '2.6.32-573.37.1.el6'
    '2.6.32-573.38.1.el6'
    '2.6.32-573.40.1.el6'
    '2.6.32-573.41.1.el6'
    '2.6.32-573.42.1.el6'
    '2.6.32-573.42.2.el6'
    '2.6.32-573.43.2.el6'
    '2.6.32-573.43.3.el6'
    '2.6.32-573.45.1.el6'
    '2.6.32-642.el6'
    '2.6.32-642.1.1.el6'
    '2.6.32-642.3.1.el6'
    '2.6.32-642.4.2.el6'
    '2.6.32-642.6.1.el6'
    '2.6.32-642.6.2.el6'
    '2.6.32-642.11.1.el6'
    '2.6.32-642.13.1.el6'
    '2.6.32-642.13.2.el6'
    '2.6.32-642.15.1.el6'
    '2.6.32-696.el6'
    '2.6.32-696.1.1.bgq.el6'
    '2.6.32-696.1.1.el6'
    '2.6.32-696.3.1.el6'
    '2.6.32-696.3.2.el6'
    '2.6.32-696.6.3.el6'
    '2.6.32-696.10.1.el6'
    '3.10.0-123.el7'
    '3.10.0-123.1.2.el7'
    '3.10.0-123.4.2.el7'
    '3.10.0-123.4.4.el7'
    '3.10.0-123.6.3.el7'
    '3.10.0-123.8.1.el7'
    '3.10.0-123.9.2.el7'
    '3.10.0-123.9.3.el7'
    '3.10.0-123.13.1.el7'
    '3.10.0-123.13.2.el7'
    '3.10.0-123.20.1.el7'
    '3.10.0-229.el7'
    '3.10.0-229.1.2.el7'
    '3.10.0-229.4.2.el7'
    '3.10.0-229.7.2.el7'
    '3.10.0-229.11.1.el7'
    '3.10.0-229.14.1.el7'
    '3.10.0-229.20.1.el7'
    '3.10.0-229.24.2.el7'
    '3.10.0-229.26.2.el7'
    '3.10.0-229.28.1.el7'
    '3.10.0-229.30.1.el7'
    '3.10.0-229.34.1.el7'
    '3.10.0-229.38.1.el7'
    '3.10.0-229.40.1.el7'
    '3.10.0-229.42.1.el7'
    '3.10.0-229.42.2.el7'
    '3.10.0-229.44.1.el7'
    '3.10.0-229.46.1.el7'
    '3.10.0-229.48.1.el7'
    '3.10.0-229.49.1.el7'
    '3.10.0-327.el7'
    '3.10.0-327.3.1.el7'
    '3.10.0-327.4.4.el7'
    '3.10.0-327.4.5.el7'
    '3.10.0-327.10.1.el7'
    '3.10.0-327.13.1.el7'
    '3.10.0-327.18.2.el7'
    '3.10.0-327.22.2.el7'
    '3.10.0-327.28.2.el7'
    '3.10.0-327.28.3.el7'
    '3.10.0-327.36.1.el7'
    '3.10.0-327.36.2.el7'
    '3.10.0-327.36.3.el7'
    '3.10.0-327.41.3.el7'
    '3.10.0-327.41.4.el7'
    '3.10.0-327.44.2.el7'
    '3.10.0-327.46.1.el7'
    '3.10.0-327.49.2.el7'
    '3.10.0-327.53.1.el7'
    '3.10.0-327.55.1.el7'
    '3.10.0-327.55.2.el7'
    '3.10.0-327.55.3.el7'
    '3.10.0-327.58.1.el7'
    '3.10.0-327.59.1.el7'
    '3.10.0-514.el7'
    '3.10.0-514.2.2.el7'
    '3.10.0-514.6.1.el7'
    '3.10.0-514.6.2.el7'
    '3.10.0-514.10.2.el7'
    '3.10.0-514.16.1.el7'
    '3.10.0-514.16.2.p7ih.el7'
    '3.10.0-514.21.1.el7'
    '3.10.0-514.21.2.el7'
    '3.10.0-514.26.1.el7'
    '3.10.0-514.26.2.el7'
    '3.10.0-514.28.1.el7'
    '3.10.0-693.el7'
    '3.10.0-693.1.1.el7'
    '3.10.0-693.2.1.el7'
    '2.6.33.9-rt31.66.el6rt'
    '2.6.33.9-rt31.74.el6rt'
    '2.6.33.9-rt31.75.el6rt'
    '2.6.33.9-rt31.79.el6rt'
    '3.0.9-rt26.45.el6rt'
    '3.0.9-rt26.46.el6rt'
    '3.0.18-rt34.53.el6rt'
    '3.0.25-rt44.57.el6rt'
    '3.0.30-rt50.62.el6rt'
    '3.0.36-rt57.66.el6rt'
    '3.2.23-rt37.56.el6rt'
    '3.2.33-rt50.66.el6rt'
    '3.6.11-rt28.20.el6rt'
    '3.6.11-rt30.25.el6rt'
    '3.6.11.2-rt33.39.el6rt'
    '3.6.11.5-rt37.55.el6rt'
    '3.8.13-rt14.20.el6rt'
    '3.8.13-rt14.25.el6rt'
    '3.8.13-rt27.33.el6rt'
    '3.8.13-rt27.34.el6rt'
    '3.8.13-rt27.40.el6rt'
    '3.10.0-229.rt56.144.el6rt'
    '3.10.0-229.rt56.147.el6rt'
    '3.10.0-229.rt56.149.el6rt'
    '3.10.0-229.rt56.151.el6rt'
    '3.10.0-229.rt56.153.el6rt'
    '3.10.0-229.rt56.158.el6rt'
    '3.10.0-229.rt56.161.el6rt'
    '3.10.0-229.rt56.162.el6rt'
    '3.10.0-327.rt56.170.el6rt'
    '3.10.0-327.rt56.171.el6rt'
    '3.10.0-327.rt56.176.el6rt'
    '3.10.0-327.rt56.183.el6rt'
    '3.10.0-327.rt56.190.el6rt'
    '3.10.0-327.rt56.194.el6rt'
    '3.10.0-327.rt56.195.el6rt'
    '3.10.0-327.rt56.197.el6rt'
    '3.10.0-327.rt56.198.el6rt'
    '3.10.0-327.rt56.199.el6rt'
    '3.10.0-514.rt56.210.el6rt'
    '3.10.0-514.rt56.215.el6rt'
    '3.10.0-514.rt56.219.el6rt'
    '3.10.0-514.rt56.221.el6rt'
    '3.10.0-514.rt56.228.el6rt'
    '3.10.0-514.rt56.231.el6rt'
    '3.10.0-693.2.1.rt56.585.el6rt'
    '3.10.33-rt32.33.el6rt'
    '3.10.33-rt32.34.el6rt'
    '3.10.33-rt32.43.el6rt'
    '3.10.33-rt32.45.el6rt'
    '3.10.33-rt32.51.el6rt'
    '3.10.33-rt32.52.el6rt'
    '3.10.58-rt62.58.el6rt'
    '3.10.58-rt62.60.el6rt'
    '3.10.0-229.rt56.141.el7'
    '3.10.0-229.1.2.rt56.141.2.el7_1'
    '3.10.0-229.4.2.rt56.141.6.el7_1'
    '3.10.0-229.7.2.rt56.141.6.el7_1'
    '3.10.0-229.11.1.rt56.141.11.el7_1'
    '3.10.0-229.14.1.rt56.141.13.el7_1'
    '3.10.0-229.20.1.rt56.141.14.el7_1'
    '3.10.0-327.rt56.204.el7'
    '3.10.0-327.4.5.rt56.206.el7_2'
    '3.10.0-327.10.1.rt56.211.el7_2'
    '3.10.0-327.13.1.rt56.216.el7_2'
    '3.10.0-327.18.2.rt56.223.el7_2'
    '3.10.0-327.22.2.rt56.230.el7_2'
    '3.10.0-327.28.2.rt56.234.el7_2'
    '3.10.0-327.28.3.rt56.235.el7'
    '3.10.0-327.36.1.rt56.237.el7'
    '3.10.0-327.36.3.rt56.238.el7'
    '3.10.0-514.rt56.420.el7'
    '3.10.0-514.2.2.rt56.424.el7'
    '3.10.0-514.6.1.rt56.429.el7'
    '3.10.0-514.6.1.rt56.430.el7'
    '3.10.0-514.10.2.rt56.435.el7'
    '3.10.0-514.16.1.rt56.437.el7'
    '3.10.0-514.21.1.rt56.438.el7'
    '3.10.0-514.26.1.rt56.442.el7'
    '3.10.0-693.rt56.617.el7'
    '3.10.0-693.2.1.rt56.620.el7'

    # Note: RHEL 5 not vulnerable.
)

KPATCH_MODULE_NAMES=(
    'kpatch_3_10_0_693_1_1_1_1'
    'kpatch_3_10_0_693_2_1_1_1'
    'kpatch_3_10_0_514_1_2'
    'kpatch_3_10_0_514_28_1_1_1'
    'kpatch_3_10_0_327_59_1_1_1'
)

VULNERABLE_KERNEL_MODULE_NAMES=(
    'bnep'
    'bluetooth'
    'btusb'
)

MITIGATION_PATTERNS=()

for module_name in "${VULNERABLE_KERNEL_MODULE_NAMES[@]}"; do
    MITIGATION_PATTERNS+=( "^[[:space:]]*install[[:space:]]+${module_name}[[:space:]]+/bin/true" )
done


compare4() {
    # Compares two versions strings, such as 2.6.32-131, using comparison operators.
    #
    # Args:
    #     left - left version string to compare
    #     expression - valid comparison operator, or their combination, e.g. >, >=, =, <=, <, <>
    #     right - left version string to compare
    #
    # Returns:
    #     0 if comparison passes, 1 otherwise

    local nr=4
    local left
    local right
    local expression="$2"

    read -r -a left <<< "$( tr ".-" "  " <<< "$1" )"
    read -r -a right <<< "$( tr ".-" "  " <<< "$3" )"

    if [[ "$expression" == *">"* ]]; then
        for (( i = 0; i < nr; i++ )); do
            (( left[i] > right[i] )) && return 0
        done
    fi

    if [[ "$expression" == *"<"* ]]; then
        for (( i = 0; i < nr; i++ )); do
            (( left[i] < right[i] )) && return 0
        done
    fi

    if [[ "$expression" == *"="* ]]; then
        for (( i = 0; i < nr; i++ )); do
            (( left[i] != right[i] )) && break
            (( i == nr - 1 )) && return 0
        done
    fi

    return 1
}


basic_args() {
    # Parses basic commandline arguments and sets basic environment.
    #
    # Args:
    #     parameters - an array of commandline arguments
    #
    # Side effects:
    #     Exits if --help parameters is used
    #     Sets COLOR constants and debug variable

    local parameters=( "$@" )

    RED="\033[1;31m"
    YELLOW="\033[1;33m"
    GREEN="\033[1;32m"
    BOLD="\033[1m"
    RESET="\033[0m"
    for parameter in "${parameters[@]}"; do
        if [[ "$parameter" == "-h" || "$parameter" == "--help" ]]; then
            echo "Usage: $( basename "$0" ) [-n | --no-colors] [-d | --debug]"
            exit 1
        elif [[ "$parameter" == "-n" || "$parameter" == "--no-colors" ]]; then
            RED=""
            YELLOW=""
            GREEN=""
            BOLD=""
            RESET=""
        elif [[ "$parameter" == "-d" || "$parameter" == "--debug" ]]; then
            debug=true
        fi
    done
}


basic_reqs() {
    # Prints common disclaimer and checks basic requirements.
    #
    # Args:
    #     CVE - string printed in the disclaimer

    local CVE="$1"

    # Disclaimer
    echo
    echo -e "${BOLD}This script is primarily designed to detect $CVE on supported"
    echo -e "Red Hat Enterprise Linux systems and kernel packages."
    echo -e "Result may be inaccurate for other RPM based systems.${RESET}"
    echo
}


check_supported_kernel() {
    # Checks if running kernel is supported.
    #
    # Args:
    #     running_kernel - kernel string as returned by 'uname -r'
    #
    # Side effects:
    #     Exits when running kernel is obviously not supported

    local running_kernel="$1"

    # Check supported platform
    if [[ "$running_kernel" != *".el"[5-7]* ]]; then
        echo -e "${RED}This script is meant to be used only on Red Hat Enterprise"
        echo -e "Linux 5, 6 and 7.${RESET}"
        exit 1
    fi
}


get_rhel() {
    # Gets RHEL number.
    #
    # Args:
    #     running_kernel - kernel string as returned by 'uname -r'
    #
    # Prints:
    #     RHEL number, e.g. '5', '6', or '7'

    local running_kernel="$1"
    local rhel

    rhel=$( sed -r -n 's/^.*el([[:digit:]]).*$/\1/p' <<< "$running_kernel" )
    echo "$rhel"
}


check_kernel() {
    # Checks kernel if it is in list of vulnerable kernels.
    #
    # Args:
    #     running_kernel - kernel string as returned by 'uname -r'
    #     vulnerable_versions - an array of vulnerable versions
    #
    # Prints:
    #     Vulnerable kernel string as returned by 'uname -r', or nothing

    local running_kernel="$1"
    shift
    local vulnerable_versions=( "$@" )

    for tested_kernel in "${vulnerable_versions[@]}"; do
        if [[ "$running_kernel" == *"$tested_kernel"* ]]; then
            echo "$running_kernel"
            break
        fi
    done
}


check_kpatch() {
    # Checks if specific kpatch listed in a kpatch list is applied.
    #
    # Args:
    #     kpatch_module_names - an array of kpatches
    #
    # Prints:
    #     Found kpatch, or nothing

    local kpatch_module_names=( "$@" )
    local modules

    # Get loaded kernel modules
    modules=$( lsmod )

    # Check if kpatch is installed
    for tested_kpatch in "${kpatch_module_names[@]}"; do
        if [[ "$modules" == *"$tested_kpatch"* ]]; then
            echo "$tested_kpatch"
            break
        fi
    done
}


check_kernel_modules() {
    # Checks if modules listed in a list are loaded.
    #
    # Args:
    #     kernel_module_names - an array of kernel module names
    #
    # Prints:
    #     Found kernel module names as one string, or an empty string

    local kernel_module_names=( "$@" )
    local modules
    local matching_modules=()

    # Get loaded kernel modules
    modules=$( lsmod )

    for tested_module in "${kernel_module_names[@]}"; do
        if [[ "$modules" == *"$tested_module"* ]]; then
            matching_modules+=( "$tested_module" )
        fi
    done

    echo "${matching_modules[*]}"
}


print_additional_arch_specific_info() {
    # Prints additional architecture-specific information if applicable.
    #
    # Args:
    #     running_arch - architecture name
    #
    # Prints:
    #     Information or nothing.

    local running_arch="$1"

    if [[ "$running_arch" == *ppc64* ]]; then
        echo -e "You are running on the PPC64 architecture."
        echo -e "Follow https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251"
        echo -e "for more information about the vulnerability impact on this architecture."
    fi

    if [[ "$running_arch" == *s390x* ]]; then
        echo -e "You are running on the s390x architecture."
        echo -e "Follow https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251"
        echo -e "for more information about the vulnerability impact on this architecture."
    fi

}

if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    basic_args "$@"
    basic_reqs "CVE-2017-1000251"
    running_kernel=$( uname -r )
    check_supported_kernel "$running_kernel"
    running_arch=$( uname -m )

    rhel=$( get_rhel "$running_kernel" )
    if [[ "$rhel" == "5" ]]; then
        export PATH='/sbin':$PATH
    fi

    vulnerable_kernel=$( check_kernel "$running_kernel" "${VULNERABLE_KERNELS[@]}" )
    applied_kpatch=$( check_kpatch "${KPATCH_MODULE_NAMES[@]}" )

    vulnerable_loaded_kernel_modules=$( check_kernel_modules "${VULNERABLE_KERNEL_MODULE_NAMES[@]}" )

    all_vulnerable_module_loading_disabled=true
    for (( i = 0; i < ${#MITIGATION_PATTERNS[@]} ; i++ )); do
        current_pattern_found=""
        # Check recommended mitigation
        for file in /etc/modprobe.d/*; do
            if grep -E --quiet "${MITIGATION_PATTERNS[$i]}" "$file" 2>/dev/null; then
                current_pattern_found=true
            fi
        done
        if [[ ! $current_pattern_found ]]; then
            all_vulnerable_module_loading_disabled=""  # false
            break  # no need to search for the rest of the patterns, already have the answer
        fi
    done

    # Debug prints
    if [[ "$debug" ]]; then
        echo "running_kernel = *$running_kernel*"
        echo "vulnerable_kernel = *$vulnerable_kernel*"
        echo "applied_kpatch = *$applied_kpatch*"
        echo "vulnerable_loaded_kernel_modules = *$vulnerable_loaded_kernel_modules*"
        echo "all_vulnerable_module_loading_disabled = *$all_vulnerable_module_loading_disabled*"
        echo "running_arch = *$running_arch*"
        echo
    fi

    # Results
    echo -e "Detected kernel package is '${BOLD}${running_kernel}${RESET}'."

    if [[ "$vulnerable_kernel" ]]; then
        if [[ ( ! "$vulnerable_loaded_kernel_modules" ) && ( "$running_arch" == *s390x* ) ]] ; then
            echo -e "${GREEN}This kernel version is not vulnerable.${RESET}"
            print_additional_arch_specific_info "$running_arch"
            exit 0
        fi

        if [[ "$applied_kpatch" ]]; then
            echo -e "${YELLOW}This kernel version is vulnerable.${RESET}"
            echo -e "${GREEN}You have correct kpatch installed${RESET} and the kernel vulnerability"
            echo -e "is not exploitable."
            exit 0
        fi

        if [[ "$all_vulnerable_module_loading_disabled" && ! "$vulnerable_loaded_kernel_modules" ]]; then
            echo -e "${YELLOW}This kernel version is vulnerable.${RESET}"
            echo -e "${GREEN}You have proper mitigation installed${RESET} and vulnerability is not exploitable."
            exit 0
        elif [[ "$all_vulnerable_module_loading_disabled" && "$vulnerable_loaded_kernel_modules" ]]; then
            echo -e "${RED}This kernel version is vulnerable.${RESET}"
            echo -e "You have proper mitigation installed, but ${RED}vulnerable kernel modules are"
            echo -e "still loaded: ${vulnerable_loaded_kernel_modules}.${RESET}"
            echo -e "You need to reboot the system or manually unload the vulnerable kernel modules."
            echo -e "Follow https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251 for advice."
            print_additional_arch_specific_info "$running_arch"
            exit 2
        elif [[ ! "$all_vulnerable_module_loading_disabled" && ! "$vulnerable_loaded_kernel_modules" ]]; then
            echo -e "${RED}This kernel version is vulnerable.${RESET}"
            echo -e "${GREEN}Vulnerable kernel modules are not loaded${RESET} and vulnerability is"
            echo -e "not currently exploitable. However, loading of vulnerable kernel modules"
            echo -e "is not disabled and ${YELLOW}the system can become vulnerable${RESET} at any moment."
            echo -e "Either update kernel package or apply mitigation (disable"
            echo -e "loading of vulnerable kernel modules) and ${YELLOW}restart the system${RESET}."
            echo -e "Follow https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251 for advice."
            print_additional_arch_specific_info "$running_arch"
            exit 3
        fi

        echo -e "${RED}This kernel version is vulnerable.${RESET}"
        echo -e "Either update kernel package or apply mitigation (disable"
        echo -e "loading of vulnerable kernel modules) and ${YELLOW}restart the system${RESET}."
        echo -e "Follow https://access.redhat.com/security/vulnerabilities/CVE-2017-1000251 for advice."
        print_additional_arch_specific_info "$running_arch"
        exit 2
    else
        echo -e "${GREEN}This kernel version is not vulnerable.${RESET}"
        exit 0
    fi
fi
