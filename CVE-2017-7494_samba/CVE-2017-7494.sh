#!/bin/bash

# Copyright (c) 2019  Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Version: 1.1

# Warning! Be sure to download latest version of this script from its primary source:
# https://access.redhat.com/security/vulnerabilities/3034621
# DO NOT blindly trust any internet sources and NEVER do `curl something | bash`!

# Checking against the list of vulnerable packages is necessary because of the way how features
# are back-ported to older versions of packages in various channels.

VULNERABLE_VERSIONS=(
    'samba3x-3.5.4-0.70.el5'
    'samba3x-3.5.4-0.70.el5_6.1'
    'samba3x-3.5.4-0.70.el5_6.2'
    'samba3x-3.5.4-0.70.el5_6.4'
    'samba3x-3.5.4-0.83.el5'
    'samba3x-3.5.4-0.83.el5_7.2'
    'samba3x-3.5.10-0.107.el5'
    'samba3x-3.5.10-0.108.el5_8'
    'samba3x-3.5.10-0.109.el5_8'
    'samba3x-3.5.10-0.110.el5_8'
    'samba3x-3.6.6-0.129.el5'
    'samba3x-3.6.6-0.131.el5_9'
    'samba3x-3.6.6-0.136.el5'
    'samba3x-3.6.6-0.138.el5_10'
    'samba3x-3.6.6-0.139.el5_10'
    'samba3x-3.6.6-0.140.el5_10'
    'samba3x-3.6.23-6.el5'
    'samba3x-3.6.23-7.el5'
    'samba3x-3.6.23-9.el5_11'
    'samba3x-3.6.23-12.el5_6'
    'samba3x-3.6.23-12.el5_9'
    'samba3x-3.6.23-12.el5_11'
    'samba3x-3.6.23-13.el5_11'
    'samba4-4.0.0-55.el6.rc4'
    'samba4-4.0.0-57.el6_4.rc4'
    'samba4-4.0.0-58.el6.rc4'
    'samba4-4.0.0-60.el6_5.rc4'
    'samba4-4.0.0-61.el6_5.rc4'
    'samba4-4.0.0-63.el6_5.rc4'
    'samba4-4.0.0-64.el6.rc4'
    'samba4-4.0.0-65.el6_5.rc4'
    'samba4-4.0.0-66.el6_6.rc4'
    'samba4-4.0.0-67.el6_7.rc4'
    'samba4-4.0.0-68.el6_7.rc4'
    'samba4-4.2.10-6.el6_2'
    'samba4-4.2.10-6.el6_4'
    'samba4-4.2.10-6.el6_5'
    'samba4-4.2.10-6.el6_6'
    'samba4-4.2.10-6.el6_7'
    'samba4-4.2.10-7.el6_8'
    'samba4-4.2.10-9.el6'
    'samba-3.6.9-160.3.el6rhs'
    'samba-3.6.9-160.7.el6rhs'
    'samba-3.6.9-167.5.1.el6rhs'
    'samba-3.6.9-167.10.el6rhs'
    'samba-3.6.9-167.10.1.el6rhs'
    'samba-3.6.9-167.10.3.el6rhs'
    'samba-3.6.9-169.1.el6rhs'
    'samba-3.6.509-169.1.el6rhs'
    'samba-3.6.509-169.4.el6rhs'
    'samba-3.6.509-169.6.el6rhs'
    'samba-4.1.17-4.el6rhs'
    'samba-4.1.17-13.el6rhs'
    'samba-4.1.17-14.el6rhs'
    'samba-4.1.17-16.el6rhs'
    'samba-4.2.4-13.el6rhs'
    'samba-4.2.4-15.el6rhs'
    'samba-4.2.11-2.el6rhs'
    'samba-4.4.3-7.el6rhs'
    'samba-4.4.3-8.el6rhs'
    'samba-4.4.5-3.el6rhs'
    'samba-4.4.6-4.el6rhs'
    'samba-4.1.17-13.el7rhgs'
    'samba-4.1.17-14.el7rhgs'
    'samba-4.2.4-6.el7rhgs'
    'samba-4.2.4-9.1.el7rhgs'
    'samba-4.2.4-13.el7rhgs'
    'samba-4.2.4-15.el7rhgs'
    'samba-4.2.11-2.el7rhgs'
    'samba-4.4.3-7.el7rhgs'
    'samba-4.4.3-8.el7rhgs'
    'samba-4.4.5-3.el7rhgs'
    'samba-4.4.6-4.el7rhgs'
    'samba-4.1.12-23.ael7b_1'
    'samba-4.1.12-24.ael7b_1'
    'samba-4.2.10-5.ael7b_1'
    'samba-3.5.4-68.el6_0.1'
    'samba-3.5.4-68.el6_0.2'
    'samba-3.5.4-68.el6_0.3'
    'samba-3.5.6-86.el6'
    'samba-3.5.6-86.el6_1.4'
    'samba-3.5.6-86.el6_1.5'
    'samba-3.5.10-114.el6'
    'samba-3.5.10-115.el6_2'
    'samba-3.5.10-116.el6_2'
    'samba-3.5.10-119.el6_2'
    'samba-3.5.10-125.el6'
    'samba-3.6.9-151.el6'
    'samba-3.6.9-151.el6_4.1'
    'samba-3.6.9-151.el6_4.3'
    'samba-3.6.9-164.el6'
    'samba-3.6.9-167.el6_5'
    'samba-3.6.9-168.el6_5'
    'samba-3.6.9-169.el6_5'
    'samba-3.6.9-171.el6_5'
    'samba-3.6.23-12.el6'
    'samba-3.6.23-14.el6_6'
    'samba-3.6.23-20.el6'
    'samba-3.6.23-21.el6_7'
    'samba-3.6.23-24.el6_7'
    'samba-3.6.23-25.el6_7'
    'samba-3.6.23-30.el6_2'
    'samba-3.6.23-30.el6_4'
    'samba-3.6.23-30.el6_5'
    'samba-3.6.23-30.el6_6'
    'samba-3.6.23-30.el6_7'
    'samba-3.6.23-31.el6_2'
    'samba-3.6.23-31.el6_4'
    'samba-3.6.23-31.el6_5'
    'samba-3.6.23-31.el6_6'
    'samba-3.6.23-31.el6_7'
    'samba-3.6.23-33.el6'
    'samba-3.6.23-35.el6_8'
    'samba-3.6.23-36.el6_8'
    'samba-3.6.23-41.el6'
    'samba-3.6.23-42.el6_9'
    'samba-4.1.1-31.el7'
    'samba-4.1.1-33.el7_0'
    'samba-4.1.1-35.el7_0'
    'samba-4.1.1-37.el7_0'
    'samba-4.1.1-38.el7_0'
    'samba-4.1.12-21.el7_1'
    'samba-4.1.12-23.el7_1'
    'samba-4.1.12-24.el7_1'
    'samba-4.2.3-10.el7'
    'samba-4.2.3-11.el7_2'
    'samba-4.2.3-12.el7_2'
    'samba-4.2.10-5.el7_1'
    'samba-4.2.10-6.el7_2'
    'samba-4.2.10-6.2.el7_2'
    'samba-4.2.10-7.el7_2'
    'samba-4.2.10-8.el7_2'
    'samba-4.2.10-9.el7_2'
    'samba-4.2.10-10.el7_2'
    'samba-4.4.4-9.el7'
    'samba-4.4.4-12.el7_3'
    'samba-4.4.4-13.el7_3'
)


basic_args() {
    # Parses basic commandline arguments and sets basic environment.
    #
    # Args:
    #     parameters - an array of commandline arguments
    #
    # Side effects:
    #     Exits if --help parameters is used
    #     Sets COLOR constants and debug variable

    parameters=( "$@" )

    RED="\033[1;31m"
    YELLOW="\033[1;33m"
    GREEN="\033[1;32m"
    BOLD="\033[1m"
    RESET="\033[0m"
    for parameter in "${parameters[@]}"; do
        if [[ "$parameter" == "-h" || "$parameter" == "--help" ]]; then
            echo "Usage: $( basename "$0" ) [-n | --no-colors] [-d | --debug]"
            exit 1
        elif [[ "$parameter" == "-n" || "$parameter" == "--no-colors" ]]; then
            RED=""
            YELLOW=""
            GREEN=""
            BOLD=""
            RESET=""
        elif [[ "$parameter" == "-d" || "$parameter" == "--debug" ]]; then
            debug=true
        fi
    done
}


basic_reqs() {
    # Prints common disclaimer and checks basic requirements.
    #
    # Args:
    #     CVE - string printed in the disclaimer
    #
    # Side effects:
    #     Exits when 'rpm' command is not available

    CVE="$1"

    # Disclaimer
    echo
    echo -e "${BOLD}This script is primarily designed to detect $CVE on supported"
    echo -e "Red Hat Enterprise Linux systems and kernel packages."
    echo -e "Result may be inaccurate for other RPM based systems.${RESET}"
    echo

    # RPM is required
    if ! command -v rpm &> /dev/null; then
        echo "'rpm' command is required, but not installed. Exiting."
        exit 1
    fi
}


check_package() {
    # Checks if installed package is in list of vulnerable packages.
    #
    # Args:
    #     installed_package - installed package string as returned by 'rpm -qa package'
    #     vulnerable_versions - an array of vulnerable versions
    #
    # Prints:
    #     Vulnerable package string as returned by 'rpm -qa package', or nothing

    installed_package="$1"
    shift
    vulnerable_versions=( "$@" )

    for tested_package in "${vulnerable_versions[@]}"; do
        if [[ "$installed_package" == "$tested_package"* ]]; then
            echo "$installed_package"
            break
        fi
    done
}


mitigation_check() {
    # Checks if 'nt pipe support = no' is contained in '/etc/samba/smb.conf'.
    #
    # Section and parameter names are not case sensitive.
    # Case is not significant in boolean values, but is preserved in string values.
    #
    # Returns:
    #     0 if mitigation is applied, otherwise different exit code
    #
    # Notes:
    #     MOCK_SMB_CONF can be used to mock /etc/samba/smb.conf file

    smb_conf_path=${MOCK_SMB_CONF:-/etc/samba/smb.conf}

    grep -E --ignore-case --quiet '^[[:space:]]*nt pipe support[[:space:]]*=[[:space:]]*(no|0|false|off)' "$smb_conf_path"
}


selinux_check() {
    # Checks if SELinux is enabled.
    #
    # Returns:
    #     0 if SELinux is enabled and enforcing, otherwise different exit code
    #

    if command -v getenforce &> /dev/null 2>&1; then
        if [[ $( getenforce ) == "Enforcing" ]]; then
            return 0
        fi
    fi
    return 1
}


if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    basic_args "$@"
    basic_reqs "CVE-2017-7494"

    # Get installed samba package
    installed_samba=$( rpm -qa samba )
    if [[ ! "$installed_samba" ]]; then
        installed_samba=$( rpm -qa samba3x )
    fi
    if [[ ! "$installed_samba" ]]; then
        installed_samba=$( rpm -qa samba4 )
    fi
    if [[ ! "$installed_samba" ]]; then
        echo -e "${GREEN}Samba is not installed${RESET}."
        exit 0
    fi

    # Basic checks
    vulnerable_samba=$( check_package "$installed_samba" "${VULNERABLE_VERSIONS[@]}" )

    # Mitigation checks
    mitigation_check
    # Store result as a flag, 1 as True, 0 as False
    # shellcheck disable=SC2181
    mitigation_applied=$(( !$? ))

    selinux_check
    # Store result as a flag, 1 as True, 0 as False
    # shellcheck disable=SC2181
    selinux=$(( !$? ))

    # Debug prints
    if [[ "$debug" ]]; then
        echo "installed_samba = *$installed_samba*"
        echo "vulnerable_samba = *$vulnerable_samba*"
        echo "mitigation_applied = *$mitigation_applied* (1 is True)"
        echo "selinux = *$selinux* (1 is True)"
        echo
    fi

    # Results
    echo -e "Detected samba package is '$BOLD$installed_samba$RESET'."

    if [[ "$vulnerable_samba" ]]; then
        if (( mitigation_applied )); then
            echo -e "${YELLOW}This samba version is vulnerable.${RESET}"
            echo -e "${GREEN}You have mitigation applied${RESET} and vulnerability is not exploitable."
            exit 0
        elif (( selinux )); then
            echo -e "${YELLOW}This samba version is vulnerable.${RESET}"
            echo -e "${GREEN}You have SELinux enabled and in enforcing mode${RESET} so vulnerability"
            echo -e "is not exploitable."
            exit 0
        else
            echo -e "${RED}This samba version is vulnerable.${RESET}"
            echo -e "Either update samba package (if possible) or apply mitigation (SELinux or"
            echo -e "disable NT pipe support)."
            echo -e "Follow https://access.redhat.com/security/vulnerabilities/3034621 for advice."
            echo -e "${YELLOW}Follow the advice on service and computer restarts!${RESET}"
            exit 2
        fi
    else
        echo -e "${GREEN}This samba version is not vulnerable.${RESET}"
        exit 0
    fi
fi
